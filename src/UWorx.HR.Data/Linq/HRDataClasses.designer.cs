#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UWorx.HR.Data.Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HumanResources")]
	public partial class HRDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmployeeUser(EmployeeUser instance);
    partial void UpdateEmployeeUser(EmployeeUser instance);
    partial void DeleteEmployeeUser(EmployeeUser instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertHR_Department(HR_Department instance);
    partial void UpdateHR_Department(HR_Department instance);
    partial void DeleteHR_Department(HR_Department instance);
    partial void InsertHR_Designation(HR_Designation instance);
    partial void UpdateHR_Designation(HR_Designation instance);
    partial void DeleteHR_Designation(HR_Designation instance);
    partial void InsertHR_EmployeeDesignation(HR_EmployeeDesignation instance);
    partial void UpdateHR_EmployeeDesignation(HR_EmployeeDesignation instance);
    partial void DeleteHR_EmployeeDesignation(HR_EmployeeDesignation instance);
    partial void InsertHR_EmployeeLeave(HR_EmployeeLeave instance);
    partial void UpdateHR_EmployeeLeave(HR_EmployeeLeave instance);
    partial void DeleteHR_EmployeeLeave(HR_EmployeeLeave instance);
    partial void InsertHR_Employee(HR_Employee instance);
    partial void UpdateHR_Employee(HR_Employee instance);
    partial void DeleteHR_Employee(HR_Employee instance);
    partial void InsertHR_EmployeeTeam(HR_EmployeeTeam instance);
    partial void UpdateHR_EmployeeTeam(HR_EmployeeTeam instance);
    partial void DeleteHR_EmployeeTeam(HR_EmployeeTeam instance);
    partial void InsertHR_Leave(HR_Leave instance);
    partial void UpdateHR_Leave(HR_Leave instance);
    partial void DeleteHR_Leave(HR_Leave instance);
    partial void InsertHR_Team(HR_Team instance);
    partial void UpdateHR_Team(HR_Team instance);
    partial void DeleteHR_Team(HR_Team instance);
    #endregion
		
		public HRDataClassesDataContext() : 
				base(global::UWorx.HR.Data.Properties.Settings.Default.HumanResourcesConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HRDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HRDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HRDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HRDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EmployeeUser> EmployeeUsers
		{
			get
			{
				return this.GetTable<EmployeeUser>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<HR_Department> HR_Departments
		{
			get
			{
				return this.GetTable<HR_Department>();
			}
		}
		
		public System.Data.Linq.Table<HR_Designation> HR_Designations
		{
			get
			{
				return this.GetTable<HR_Designation>();
			}
		}
		
		public System.Data.Linq.Table<HR_EmployeeDesignation> HR_EmployeeDesignations
		{
			get
			{
				return this.GetTable<HR_EmployeeDesignation>();
			}
		}
		
		public System.Data.Linq.Table<HR_EmployeeLeave> HR_EmployeeLeaves
		{
			get
			{
				return this.GetTable<HR_EmployeeLeave>();
			}
		}
		
		public System.Data.Linq.Table<HR_Employee> HR_Employees
		{
			get
			{
				return this.GetTable<HR_Employee>();
			}
		}
		
		public System.Data.Linq.Table<HR_EmployeeTeam> HR_EmployeeTeams
		{
			get
			{
				return this.GetTable<HR_EmployeeTeam>();
			}
		}
		
		public System.Data.Linq.Table<HR_Leave> HR_Leaves
		{
			get
			{
				return this.GetTable<HR_Leave>();
			}
		}
		
		public System.Data.Linq.Table<HR_Team> HR_Teams
		{
			get
			{
				return this.GetTable<HR_Team>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeUsers")]
	public partial class EmployeeUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeIndex;
		
		private int _UserIndex;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIndexChanging(int value);
    partial void OnEmployeeIndexChanged();
    partial void OnUserIndexChanging(int value);
    partial void OnUserIndexChanged();
    #endregion
		
		public EmployeeUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeIndex", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployeeIndex
		{
			get
			{
				return this._EmployeeIndex;
			}
			set
			{
				if ((this._EmployeeIndex != value))
				{
					this.OnEmployeeIndexChanging(value);
					this.SendPropertyChanging();
					this._EmployeeIndex = value;
					this.SendPropertyChanged("EmployeeIndex");
					this.OnEmployeeIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIndex", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserIndex
		{
			get
			{
				return this._UserIndex;
			}
			set
			{
				if ((this._UserIndex != value))
				{
					this.OnUserIndexChanging(value);
					this.SendPropertyChanging();
					this._UserIndex = value;
					this.SendPropertyChanged("UserIndex");
					this.OnUserIndexChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserIndex;
		
		private string _UserEmail;
		
		private string _UserPassword;
		
		private string _FirstName;
		
		private string _LastName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIndexChanging(int value);
    partial void OnUserIndexChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIndex", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserIndex
		{
			get
			{
				return this._UserIndex;
			}
			set
			{
				if ((this._UserIndex != value))
				{
					this.OnUserIndexChanging(value);
					this.SendPropertyChanging();
					this._UserIndex = value;
					this.SendPropertyChanged("UserIndex");
					this.OnUserIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HR_Departments")]
	public partial class HR_Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DepartmentIndex;
		
		private string _DepartmentName;
		
		private EntitySet<HR_Employee> _HR_Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIndexChanging(int value);
    partial void OnDepartmentIndexChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    #endregion
		
		public HR_Department()
		{
			this._HR_Employees = new EntitySet<HR_Employee>(new Action<HR_Employee>(this.attach_HR_Employees), new Action<HR_Employee>(this.detach_HR_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentIndex", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DepartmentIndex
		{
			get
			{
				return this._DepartmentIndex;
			}
			set
			{
				if ((this._DepartmentIndex != value))
				{
					this.OnDepartmentIndexChanging(value);
					this.SendPropertyChanging();
					this._DepartmentIndex = value;
					this.SendPropertyChanged("DepartmentIndex");
					this.OnDepartmentIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Department_HR_Employee", Storage="_HR_Employees", ThisKey="DepartmentIndex", OtherKey="DepartmentIndex")]
		public EntitySet<HR_Employee> HR_Employees
		{
			get
			{
				return this._HR_Employees;
			}
			set
			{
				this._HR_Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HR_Employees(HR_Employee entity)
		{
			this.SendPropertyChanging();
			entity.HR_Department = this;
		}
		
		private void detach_HR_Employees(HR_Employee entity)
		{
			this.SendPropertyChanging();
			entity.HR_Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HR_Designations")]
	public partial class HR_Designation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DesignationIndex;
		
		private string _DesignationName;
		
		private EntitySet<HR_EmployeeDesignation> _HR_EmployeeDesignations;
		
		private EntitySet<HR_Employee> _HR_Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesignationIndexChanging(int value);
    partial void OnDesignationIndexChanged();
    partial void OnDesignationNameChanging(string value);
    partial void OnDesignationNameChanged();
    #endregion
		
		public HR_Designation()
		{
			this._HR_EmployeeDesignations = new EntitySet<HR_EmployeeDesignation>(new Action<HR_EmployeeDesignation>(this.attach_HR_EmployeeDesignations), new Action<HR_EmployeeDesignation>(this.detach_HR_EmployeeDesignations));
			this._HR_Employees = new EntitySet<HR_Employee>(new Action<HR_Employee>(this.attach_HR_Employees), new Action<HR_Employee>(this.detach_HR_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationIndex", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DesignationIndex
		{
			get
			{
				return this._DesignationIndex;
			}
			set
			{
				if ((this._DesignationIndex != value))
				{
					this.OnDesignationIndexChanging(value);
					this.SendPropertyChanging();
					this._DesignationIndex = value;
					this.SendPropertyChanged("DesignationIndex");
					this.OnDesignationIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DesignationName
		{
			get
			{
				return this._DesignationName;
			}
			set
			{
				if ((this._DesignationName != value))
				{
					this.OnDesignationNameChanging(value);
					this.SendPropertyChanging();
					this._DesignationName = value;
					this.SendPropertyChanged("DesignationName");
					this.OnDesignationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Designation_HR_EmployeeDesignation", Storage="_HR_EmployeeDesignations", ThisKey="DesignationIndex", OtherKey="DesignationIndex")]
		public EntitySet<HR_EmployeeDesignation> HR_EmployeeDesignations
		{
			get
			{
				return this._HR_EmployeeDesignations;
			}
			set
			{
				this._HR_EmployeeDesignations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Designation_HR_Employee", Storage="_HR_Employees", ThisKey="DesignationIndex", OtherKey="DesignationIndex")]
		public EntitySet<HR_Employee> HR_Employees
		{
			get
			{
				return this._HR_Employees;
			}
			set
			{
				this._HR_Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HR_EmployeeDesignations(HR_EmployeeDesignation entity)
		{
			this.SendPropertyChanging();
			entity.HR_Designation = this;
		}
		
		private void detach_HR_EmployeeDesignations(HR_EmployeeDesignation entity)
		{
			this.SendPropertyChanging();
			entity.HR_Designation = null;
		}
		
		private void attach_HR_Employees(HR_Employee entity)
		{
			this.SendPropertyChanging();
			entity.HR_Designation = this;
		}
		
		private void detach_HR_Employees(HR_Employee entity)
		{
			this.SendPropertyChanging();
			entity.HR_Designation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HR_EmployeeDesignations")]
	public partial class HR_EmployeeDesignation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeIndex;
		
		private int _DesignationIndex;
		
		private System.DateTime _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private EntityRef<HR_Designation> _HR_Designation;
		
		private EntityRef<HR_Employee> _HR_Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIndexChanging(int value);
    partial void OnEmployeeIndexChanged();
    partial void OnDesignationIndexChanging(int value);
    partial void OnDesignationIndexChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    #endregion
		
		public HR_EmployeeDesignation()
		{
			this._HR_Designation = default(EntityRef<HR_Designation>);
			this._HR_Employee = default(EntityRef<HR_Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeIndex", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployeeIndex
		{
			get
			{
				return this._EmployeeIndex;
			}
			set
			{
				if ((this._EmployeeIndex != value))
				{
					if (this._HR_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIndexChanging(value);
					this.SendPropertyChanging();
					this._EmployeeIndex = value;
					this.SendPropertyChanged("EmployeeIndex");
					this.OnEmployeeIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationIndex", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DesignationIndex
		{
			get
			{
				return this._DesignationIndex;
			}
			set
			{
				if ((this._DesignationIndex != value))
				{
					if (this._HR_Designation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesignationIndexChanging(value);
					this.SendPropertyChanging();
					this._DesignationIndex = value;
					this.SendPropertyChanged("DesignationIndex");
					this.OnDesignationIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Designation_HR_EmployeeDesignation", Storage="_HR_Designation", ThisKey="DesignationIndex", OtherKey="DesignationIndex", IsForeignKey=true)]
		public HR_Designation HR_Designation
		{
			get
			{
				return this._HR_Designation.Entity;
			}
			set
			{
				HR_Designation previousValue = this._HR_Designation.Entity;
				if (((previousValue != value) 
							|| (this._HR_Designation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_Designation.Entity = null;
						previousValue.HR_EmployeeDesignations.Remove(this);
					}
					this._HR_Designation.Entity = value;
					if ((value != null))
					{
						value.HR_EmployeeDesignations.Add(this);
						this._DesignationIndex = value.DesignationIndex;
					}
					else
					{
						this._DesignationIndex = default(int);
					}
					this.SendPropertyChanged("HR_Designation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Employee_HR_EmployeeDesignation", Storage="_HR_Employee", ThisKey="EmployeeIndex", OtherKey="EmployeeIndex", IsForeignKey=true)]
		public HR_Employee HR_Employee
		{
			get
			{
				return this._HR_Employee.Entity;
			}
			set
			{
				HR_Employee previousValue = this._HR_Employee.Entity;
				if (((previousValue != value) 
							|| (this._HR_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_Employee.Entity = null;
						previousValue.HR_EmployeeDesignations.Remove(this);
					}
					this._HR_Employee.Entity = value;
					if ((value != null))
					{
						value.HR_EmployeeDesignations.Add(this);
						this._EmployeeIndex = value.EmployeeIndex;
					}
					else
					{
						this._EmployeeIndex = default(int);
					}
					this.SendPropertyChanged("HR_Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HR_EmployeeLeaves")]
	public partial class HR_EmployeeLeave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeIndex;
		
		private int _LeaveTypeIndex;
		
		private System.DateTime _LeaveDate;
		
		private decimal _LeaveCount;
		
		private EntityRef<HR_Employee> _HR_Employee;
		
		private EntityRef<HR_Leave> _HR_Leave;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIndexChanging(int value);
    partial void OnEmployeeIndexChanged();
    partial void OnLeaveTypeIndexChanging(int value);
    partial void OnLeaveTypeIndexChanged();
    partial void OnLeaveDateChanging(System.DateTime value);
    partial void OnLeaveDateChanged();
    partial void OnLeaveCountChanging(decimal value);
    partial void OnLeaveCountChanged();
    #endregion
		
		public HR_EmployeeLeave()
		{
			this._HR_Employee = default(EntityRef<HR_Employee>);
			this._HR_Leave = default(EntityRef<HR_Leave>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeIndex", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployeeIndex
		{
			get
			{
				return this._EmployeeIndex;
			}
			set
			{
				if ((this._EmployeeIndex != value))
				{
					if (this._HR_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIndexChanging(value);
					this.SendPropertyChanging();
					this._EmployeeIndex = value;
					this.SendPropertyChanged("EmployeeIndex");
					this.OnEmployeeIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeIndex", DbType="Int NOT NULL")]
		public int LeaveTypeIndex
		{
			get
			{
				return this._LeaveTypeIndex;
			}
			set
			{
				if ((this._LeaveTypeIndex != value))
				{
					if (this._HR_Leave.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLeaveTypeIndexChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeIndex = value;
					this.SendPropertyChanged("LeaveTypeIndex");
					this.OnLeaveTypeIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime LeaveDate
		{
			get
			{
				return this._LeaveDate;
			}
			set
			{
				if ((this._LeaveDate != value))
				{
					this.OnLeaveDateChanging(value);
					this.SendPropertyChanging();
					this._LeaveDate = value;
					this.SendPropertyChanged("LeaveDate");
					this.OnLeaveDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveCount", DbType="Decimal(3,1) NOT NULL")]
		public decimal LeaveCount
		{
			get
			{
				return this._LeaveCount;
			}
			set
			{
				if ((this._LeaveCount != value))
				{
					this.OnLeaveCountChanging(value);
					this.SendPropertyChanging();
					this._LeaveCount = value;
					this.SendPropertyChanged("LeaveCount");
					this.OnLeaveCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Employee_HR_EmployeeLeave", Storage="_HR_Employee", ThisKey="EmployeeIndex", OtherKey="EmployeeIndex", IsForeignKey=true)]
		public HR_Employee HR_Employee
		{
			get
			{
				return this._HR_Employee.Entity;
			}
			set
			{
				HR_Employee previousValue = this._HR_Employee.Entity;
				if (((previousValue != value) 
							|| (this._HR_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_Employee.Entity = null;
						previousValue.HR_EmployeeLeaves.Remove(this);
					}
					this._HR_Employee.Entity = value;
					if ((value != null))
					{
						value.HR_EmployeeLeaves.Add(this);
						this._EmployeeIndex = value.EmployeeIndex;
					}
					else
					{
						this._EmployeeIndex = default(int);
					}
					this.SendPropertyChanged("HR_Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Leave_HR_EmployeeLeave", Storage="_HR_Leave", ThisKey="LeaveTypeIndex", OtherKey="LeaveTypeIndex", IsForeignKey=true)]
		public HR_Leave HR_Leave
		{
			get
			{
				return this._HR_Leave.Entity;
			}
			set
			{
				HR_Leave previousValue = this._HR_Leave.Entity;
				if (((previousValue != value) 
							|| (this._HR_Leave.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_Leave.Entity = null;
						previousValue.HR_EmployeeLeaves.Remove(this);
					}
					this._HR_Leave.Entity = value;
					if ((value != null))
					{
						value.HR_EmployeeLeaves.Add(this);
						this._LeaveTypeIndex = value.LeaveTypeIndex;
					}
					else
					{
						this._LeaveTypeIndex = default(int);
					}
					this.SendPropertyChanged("HR_Leave");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HR_Employees")]
	public partial class HR_Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeIndex;
		
		private int _DepartmentIndex;
		
		private int _DesignationIndex;
		
		private int _ManagerEmployeeIndex;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<HR_EmployeeDesignation> _HR_EmployeeDesignations;
		
		private EntitySet<HR_EmployeeLeave> _HR_EmployeeLeaves;
		
		private EntitySet<HR_Employee> _HR_Employees;
		
		private EntitySet<HR_EmployeeTeam> _HR_EmployeeTeams;
		
		private EntitySet<HR_Team> _HR_Teams;
		
		private EntityRef<HR_Department> _HR_Department;
		
		private EntityRef<HR_Designation> _HR_Designation;
		
		private EntityRef<HR_Employee> _HR_Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIndexChanging(int value);
    partial void OnEmployeeIndexChanged();
    partial void OnDepartmentIndexChanging(int value);
    partial void OnDepartmentIndexChanged();
    partial void OnDesignationIndexChanging(int value);
    partial void OnDesignationIndexChanged();
    partial void OnManagerEmployeeIndexChanging(int value);
    partial void OnManagerEmployeeIndexChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public HR_Employee()
		{
			this._HR_EmployeeDesignations = new EntitySet<HR_EmployeeDesignation>(new Action<HR_EmployeeDesignation>(this.attach_HR_EmployeeDesignations), new Action<HR_EmployeeDesignation>(this.detach_HR_EmployeeDesignations));
			this._HR_EmployeeLeaves = new EntitySet<HR_EmployeeLeave>(new Action<HR_EmployeeLeave>(this.attach_HR_EmployeeLeaves), new Action<HR_EmployeeLeave>(this.detach_HR_EmployeeLeaves));
			this._HR_Employees = new EntitySet<HR_Employee>(new Action<HR_Employee>(this.attach_HR_Employees), new Action<HR_Employee>(this.detach_HR_Employees));
			this._HR_EmployeeTeams = new EntitySet<HR_EmployeeTeam>(new Action<HR_EmployeeTeam>(this.attach_HR_EmployeeTeams), new Action<HR_EmployeeTeam>(this.detach_HR_EmployeeTeams));
			this._HR_Teams = new EntitySet<HR_Team>(new Action<HR_Team>(this.attach_HR_Teams), new Action<HR_Team>(this.detach_HR_Teams));
			this._HR_Department = default(EntityRef<HR_Department>);
			this._HR_Designation = default(EntityRef<HR_Designation>);
			this._HR_Employee1 = default(EntityRef<HR_Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeIndex", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeeIndex
		{
			get
			{
				return this._EmployeeIndex;
			}
			set
			{
				if ((this._EmployeeIndex != value))
				{
					this.OnEmployeeIndexChanging(value);
					this.SendPropertyChanging();
					this._EmployeeIndex = value;
					this.SendPropertyChanged("EmployeeIndex");
					this.OnEmployeeIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentIndex", DbType="Int NOT NULL")]
		public int DepartmentIndex
		{
			get
			{
				return this._DepartmentIndex;
			}
			set
			{
				if ((this._DepartmentIndex != value))
				{
					if (this._HR_Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIndexChanging(value);
					this.SendPropertyChanging();
					this._DepartmentIndex = value;
					this.SendPropertyChanged("DepartmentIndex");
					this.OnDepartmentIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationIndex", DbType="Int NOT NULL")]
		public int DesignationIndex
		{
			get
			{
				return this._DesignationIndex;
			}
			set
			{
				if ((this._DesignationIndex != value))
				{
					if (this._HR_Designation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesignationIndexChanging(value);
					this.SendPropertyChanging();
					this._DesignationIndex = value;
					this.SendPropertyChanged("DesignationIndex");
					this.OnDesignationIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerEmployeeIndex", DbType="Int NOT NULL")]
		public int ManagerEmployeeIndex
		{
			get
			{
				return this._ManagerEmployeeIndex;
			}
			set
			{
				if ((this._ManagerEmployeeIndex != value))
				{
					if (this._HR_Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerEmployeeIndexChanging(value);
					this.SendPropertyChanging();
					this._ManagerEmployeeIndex = value;
					this.SendPropertyChanged("ManagerEmployeeIndex");
					this.OnManagerEmployeeIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Employee_HR_EmployeeDesignation", Storage="_HR_EmployeeDesignations", ThisKey="EmployeeIndex", OtherKey="EmployeeIndex")]
		public EntitySet<HR_EmployeeDesignation> HR_EmployeeDesignations
		{
			get
			{
				return this._HR_EmployeeDesignations;
			}
			set
			{
				this._HR_EmployeeDesignations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Employee_HR_EmployeeLeave", Storage="_HR_EmployeeLeaves", ThisKey="EmployeeIndex", OtherKey="EmployeeIndex")]
		public EntitySet<HR_EmployeeLeave> HR_EmployeeLeaves
		{
			get
			{
				return this._HR_EmployeeLeaves;
			}
			set
			{
				this._HR_EmployeeLeaves.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Employee_HR_Employee", Storage="_HR_Employees", ThisKey="EmployeeIndex", OtherKey="ManagerEmployeeIndex")]
		public EntitySet<HR_Employee> HR_Employees
		{
			get
			{
				return this._HR_Employees;
			}
			set
			{
				this._HR_Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Employee_HR_EmployeeTeam", Storage="_HR_EmployeeTeams", ThisKey="EmployeeIndex", OtherKey="EmployeeIndex")]
		public EntitySet<HR_EmployeeTeam> HR_EmployeeTeams
		{
			get
			{
				return this._HR_EmployeeTeams;
			}
			set
			{
				this._HR_EmployeeTeams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Employee_HR_Team", Storage="_HR_Teams", ThisKey="EmployeeIndex", OtherKey="ManagerEmployeeIndex")]
		public EntitySet<HR_Team> HR_Teams
		{
			get
			{
				return this._HR_Teams;
			}
			set
			{
				this._HR_Teams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Department_HR_Employee", Storage="_HR_Department", ThisKey="DepartmentIndex", OtherKey="DepartmentIndex", IsForeignKey=true)]
		public HR_Department HR_Department
		{
			get
			{
				return this._HR_Department.Entity;
			}
			set
			{
				HR_Department previousValue = this._HR_Department.Entity;
				if (((previousValue != value) 
							|| (this._HR_Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_Department.Entity = null;
						previousValue.HR_Employees.Remove(this);
					}
					this._HR_Department.Entity = value;
					if ((value != null))
					{
						value.HR_Employees.Add(this);
						this._DepartmentIndex = value.DepartmentIndex;
					}
					else
					{
						this._DepartmentIndex = default(int);
					}
					this.SendPropertyChanged("HR_Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Designation_HR_Employee", Storage="_HR_Designation", ThisKey="DesignationIndex", OtherKey="DesignationIndex", IsForeignKey=true)]
		public HR_Designation HR_Designation
		{
			get
			{
				return this._HR_Designation.Entity;
			}
			set
			{
				HR_Designation previousValue = this._HR_Designation.Entity;
				if (((previousValue != value) 
							|| (this._HR_Designation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_Designation.Entity = null;
						previousValue.HR_Employees.Remove(this);
					}
					this._HR_Designation.Entity = value;
					if ((value != null))
					{
						value.HR_Employees.Add(this);
						this._DesignationIndex = value.DesignationIndex;
					}
					else
					{
						this._DesignationIndex = default(int);
					}
					this.SendPropertyChanged("HR_Designation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Employee_HR_Employee", Storage="_HR_Employee1", ThisKey="ManagerEmployeeIndex", OtherKey="EmployeeIndex", IsForeignKey=true)]
		public HR_Employee HR_Employee1
		{
			get
			{
				return this._HR_Employee1.Entity;
			}
			set
			{
				HR_Employee previousValue = this._HR_Employee1.Entity;
				if (((previousValue != value) 
							|| (this._HR_Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_Employee1.Entity = null;
						previousValue.HR_Employees.Remove(this);
					}
					this._HR_Employee1.Entity = value;
					if ((value != null))
					{
						value.HR_Employees.Add(this);
						this._ManagerEmployeeIndex = value.EmployeeIndex;
					}
					else
					{
						this._ManagerEmployeeIndex = default(int);
					}
					this.SendPropertyChanged("HR_Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HR_EmployeeDesignations(HR_EmployeeDesignation entity)
		{
			this.SendPropertyChanging();
			entity.HR_Employee = this;
		}
		
		private void detach_HR_EmployeeDesignations(HR_EmployeeDesignation entity)
		{
			this.SendPropertyChanging();
			entity.HR_Employee = null;
		}
		
		private void attach_HR_EmployeeLeaves(HR_EmployeeLeave entity)
		{
			this.SendPropertyChanging();
			entity.HR_Employee = this;
		}
		
		private void detach_HR_EmployeeLeaves(HR_EmployeeLeave entity)
		{
			this.SendPropertyChanging();
			entity.HR_Employee = null;
		}
		
		private void attach_HR_Employees(HR_Employee entity)
		{
			this.SendPropertyChanging();
			entity.HR_Employee1 = this;
		}
		
		private void detach_HR_Employees(HR_Employee entity)
		{
			this.SendPropertyChanging();
			entity.HR_Employee1 = null;
		}
		
		private void attach_HR_EmployeeTeams(HR_EmployeeTeam entity)
		{
			this.SendPropertyChanging();
			entity.HR_Employee = this;
		}
		
		private void detach_HR_EmployeeTeams(HR_EmployeeTeam entity)
		{
			this.SendPropertyChanging();
			entity.HR_Employee = null;
		}
		
		private void attach_HR_Teams(HR_Team entity)
		{
			this.SendPropertyChanging();
			entity.HR_Employee = this;
		}
		
		private void detach_HR_Teams(HR_Team entity)
		{
			this.SendPropertyChanging();
			entity.HR_Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HR_EmployeeTeams")]
	public partial class HR_EmployeeTeam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeIndex;
		
		private int _TeamIndex;
		
		private EntityRef<HR_Employee> _HR_Employee;
		
		private EntityRef<HR_Team> _HR_Team;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIndexChanging(int value);
    partial void OnEmployeeIndexChanged();
    partial void OnTeamIndexChanging(int value);
    partial void OnTeamIndexChanged();
    #endregion
		
		public HR_EmployeeTeam()
		{
			this._HR_Employee = default(EntityRef<HR_Employee>);
			this._HR_Team = default(EntityRef<HR_Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeIndex", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployeeIndex
		{
			get
			{
				return this._EmployeeIndex;
			}
			set
			{
				if ((this._EmployeeIndex != value))
				{
					if (this._HR_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIndexChanging(value);
					this.SendPropertyChanging();
					this._EmployeeIndex = value;
					this.SendPropertyChanged("EmployeeIndex");
					this.OnEmployeeIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamIndex", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TeamIndex
		{
			get
			{
				return this._TeamIndex;
			}
			set
			{
				if ((this._TeamIndex != value))
				{
					if (this._HR_Team.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamIndexChanging(value);
					this.SendPropertyChanging();
					this._TeamIndex = value;
					this.SendPropertyChanged("TeamIndex");
					this.OnTeamIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Employee_HR_EmployeeTeam", Storage="_HR_Employee", ThisKey="EmployeeIndex", OtherKey="EmployeeIndex", IsForeignKey=true)]
		public HR_Employee HR_Employee
		{
			get
			{
				return this._HR_Employee.Entity;
			}
			set
			{
				HR_Employee previousValue = this._HR_Employee.Entity;
				if (((previousValue != value) 
							|| (this._HR_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_Employee.Entity = null;
						previousValue.HR_EmployeeTeams.Remove(this);
					}
					this._HR_Employee.Entity = value;
					if ((value != null))
					{
						value.HR_EmployeeTeams.Add(this);
						this._EmployeeIndex = value.EmployeeIndex;
					}
					else
					{
						this._EmployeeIndex = default(int);
					}
					this.SendPropertyChanged("HR_Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Team_HR_EmployeeTeam", Storage="_HR_Team", ThisKey="TeamIndex", OtherKey="TeamIndex", IsForeignKey=true)]
		public HR_Team HR_Team
		{
			get
			{
				return this._HR_Team.Entity;
			}
			set
			{
				HR_Team previousValue = this._HR_Team.Entity;
				if (((previousValue != value) 
							|| (this._HR_Team.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_Team.Entity = null;
						previousValue.HR_EmployeeTeams.Remove(this);
					}
					this._HR_Team.Entity = value;
					if ((value != null))
					{
						value.HR_EmployeeTeams.Add(this);
						this._TeamIndex = value.TeamIndex;
					}
					else
					{
						this._TeamIndex = default(int);
					}
					this.SendPropertyChanged("HR_Team");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HR_Leaves")]
	public partial class HR_Leave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeaveTypeIndex;
		
		private string _LeaveType;
		
		private EntitySet<HR_EmployeeLeave> _HR_EmployeeLeaves;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaveTypeIndexChanging(int value);
    partial void OnLeaveTypeIndexChanged();
    partial void OnLeaveTypeChanging(string value);
    partial void OnLeaveTypeChanged();
    #endregion
		
		public HR_Leave()
		{
			this._HR_EmployeeLeaves = new EntitySet<HR_EmployeeLeave>(new Action<HR_EmployeeLeave>(this.attach_HR_EmployeeLeaves), new Action<HR_EmployeeLeave>(this.detach_HR_EmployeeLeaves));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTypeIndex", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LeaveTypeIndex
		{
			get
			{
				return this._LeaveTypeIndex;
			}
			set
			{
				if ((this._LeaveTypeIndex != value))
				{
					this.OnLeaveTypeIndexChanging(value);
					this.SendPropertyChanging();
					this._LeaveTypeIndex = value;
					this.SendPropertyChanged("LeaveTypeIndex");
					this.OnLeaveTypeIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LeaveType
		{
			get
			{
				return this._LeaveType;
			}
			set
			{
				if ((this._LeaveType != value))
				{
					this.OnLeaveTypeChanging(value);
					this.SendPropertyChanging();
					this._LeaveType = value;
					this.SendPropertyChanged("LeaveType");
					this.OnLeaveTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Leave_HR_EmployeeLeave", Storage="_HR_EmployeeLeaves", ThisKey="LeaveTypeIndex", OtherKey="LeaveTypeIndex")]
		public EntitySet<HR_EmployeeLeave> HR_EmployeeLeaves
		{
			get
			{
				return this._HR_EmployeeLeaves;
			}
			set
			{
				this._HR_EmployeeLeaves.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HR_EmployeeLeaves(HR_EmployeeLeave entity)
		{
			this.SendPropertyChanging();
			entity.HR_Leave = this;
		}
		
		private void detach_HR_EmployeeLeaves(HR_EmployeeLeave entity)
		{
			this.SendPropertyChanging();
			entity.HR_Leave = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HR_Teams")]
	public partial class HR_Team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeamIndex;
		
		private int _ManagerEmployeeIndex;
		
		private string _TeamName;
		
		private EntitySet<HR_EmployeeTeam> _HR_EmployeeTeams;
		
		private EntityRef<HR_Employee> _HR_Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamIndexChanging(int value);
    partial void OnTeamIndexChanged();
    partial void OnManagerEmployeeIndexChanging(int value);
    partial void OnManagerEmployeeIndexChanged();
    partial void OnTeamNameChanging(string value);
    partial void OnTeamNameChanged();
    #endregion
		
		public HR_Team()
		{
			this._HR_EmployeeTeams = new EntitySet<HR_EmployeeTeam>(new Action<HR_EmployeeTeam>(this.attach_HR_EmployeeTeams), new Action<HR_EmployeeTeam>(this.detach_HR_EmployeeTeams));
			this._HR_Employee = default(EntityRef<HR_Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamIndex", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeamIndex
		{
			get
			{
				return this._TeamIndex;
			}
			set
			{
				if ((this._TeamIndex != value))
				{
					this.OnTeamIndexChanging(value);
					this.SendPropertyChanging();
					this._TeamIndex = value;
					this.SendPropertyChanged("TeamIndex");
					this.OnTeamIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManagerEmployeeIndex", DbType="Int NOT NULL")]
		public int ManagerEmployeeIndex
		{
			get
			{
				return this._ManagerEmployeeIndex;
			}
			set
			{
				if ((this._ManagerEmployeeIndex != value))
				{
					if (this._HR_Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerEmployeeIndexChanging(value);
					this.SendPropertyChanging();
					this._ManagerEmployeeIndex = value;
					this.SendPropertyChanged("ManagerEmployeeIndex");
					this.OnManagerEmployeeIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this.OnTeamNameChanging(value);
					this.SendPropertyChanging();
					this._TeamName = value;
					this.SendPropertyChanged("TeamName");
					this.OnTeamNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Team_HR_EmployeeTeam", Storage="_HR_EmployeeTeams", ThisKey="TeamIndex", OtherKey="TeamIndex")]
		public EntitySet<HR_EmployeeTeam> HR_EmployeeTeams
		{
			get
			{
				return this._HR_EmployeeTeams;
			}
			set
			{
				this._HR_EmployeeTeams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HR_Employee_HR_Team", Storage="_HR_Employee", ThisKey="ManagerEmployeeIndex", OtherKey="EmployeeIndex", IsForeignKey=true)]
		public HR_Employee HR_Employee
		{
			get
			{
				return this._HR_Employee.Entity;
			}
			set
			{
				HR_Employee previousValue = this._HR_Employee.Entity;
				if (((previousValue != value) 
							|| (this._HR_Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HR_Employee.Entity = null;
						previousValue.HR_Teams.Remove(this);
					}
					this._HR_Employee.Entity = value;
					if ((value != null))
					{
						value.HR_Teams.Add(this);
						this._ManagerEmployeeIndex = value.EmployeeIndex;
					}
					else
					{
						this._ManagerEmployeeIndex = default(int);
					}
					this.SendPropertyChanged("HR_Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HR_EmployeeTeams(HR_EmployeeTeam entity)
		{
			this.SendPropertyChanging();
			entity.HR_Team = this;
		}
		
		private void detach_HR_EmployeeTeams(HR_EmployeeTeam entity)
		{
			this.SendPropertyChanging();
			entity.HR_Team = null;
		}
	}
}
#pragma warning restore 1591
